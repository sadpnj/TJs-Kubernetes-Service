apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"jellyfin","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"jellyfin-server","helm.sh/chart":"jellyfin-1.2.0"},"name":"jellyfin","namespace":"jellyfin-server-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/instance":"jellyfin","app.kubernetes.io/name":"jellyfin-server"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"app.kubernetes.io/instance":"jellyfin","app.kubernetes.io/name":"jellyfin-server"}},"spec":{"containers":[{"image":"docker.io/jellyfin/jellyfin:10.9.11","imagePullPolicy":"IfNotPresent","livenessProbe":{"initialDelaySeconds":10,"tcpSocket":{"port":"http"}},"name":"jellyfin","ports":[{"containerPort":8096,"name":"http","protocol":"TCP"}],"readinessProbe":{"initialDelaySeconds":10,"tcpSocket":{"port":"http"}},"resources":{},"volumeMounts":[{"mountPath":"/config","name":"config"},{"mountPath":"/media","name":"media"}]}],"volumes":[{"name":"config","persistentVolumeClaim":{"claimName":"jellyfin-data"}},{"name":"media","persistentVolumeClaim":{"claimName":"jellyfin-media"}}]}}}}
  creationTimestamp: "2024-09-13T11:08:52Z"
  generation: 3
  labels:
    app.kubernetes.io/instance: jellyfin
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jellyfin-server
    helm.sh/chart: jellyfin-1.2.0
  name: jellyfin
  namespace: jellyfin-server-system
  resourceVersion: "99272302"
  uid: 7ef3edd1-51c1-4709-bdd7-493f855abc61
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: jellyfin
      app.kubernetes.io/name: jellyfin-server
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: jellyfin
        app.kubernetes.io/name: jellyfin-server
    spec:
      containers:
      - image: docker.io/jellyfin/jellyfin:10.9.11
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 1
        name: jellyfin
        ports:
        - containerPort: 8096
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /media
          name: media
      nodeSelector:
        mainpod: jellyfin
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: jellyfin-data
      - name: media
        persistentVolumeClaim:
          claimName: jellyfin-media
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2024-09-13T22:58:52Z"
    lastUpdateTime: "2024-09-13T22:58:52Z"
    message: ReplicaSet "jellyfin-84c69875df" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2024-09-14T13:04:47Z"
    lastUpdateTime: "2024-09-14T13:04:47Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
