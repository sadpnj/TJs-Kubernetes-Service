service:
    annotations:
      io.cilium/lb-ipam-ips: 10.10.10.104
    type: LoadBalancer

metrics:
  enabled: true

externalDatabase:
  enabled: true
  type: postgresql
  user: nextcloud
  database: nextcloud
  existingSecret:
    enabled: true
    secretName: db-creds
    passwordKey: db-password


postgresql:
  enabled: true
  global:
    postgresql:
      # global.postgresql.auth overrides postgresql.auth
      auth:
        username: nextcloud
        database: nextcloud
        # Name of existing secret to use for PostgreSQL credentials.
        # auth.postgresPassword, auth.password, and auth.replicationPassword will be ignored and picked up from this secret.
        # secret might also contains the key ldap-password if LDAP is enabled.
        # ldap.bind_password will be ignored and picked from this secret in this case.
        existingSecret: db-creds
        # Names of keys in existing secret to use for PostgreSQL credentials
        secretKeys:
          adminPasswordKey: db-admin-password
          userPasswordKey: db-password
          replicationPasswordKey: db-replica-password
  primary:
    persistence:
      enabled: true
      # Use an existing Persistent Volume Claim (must be created ahead of time)
      existingClaim: nextcloud-db
      storageClass: data

##
## Redis chart configuration
## for more options see https://github.com/bitnami/charts/tree/main/bitnami/redis
##

redis:
  enabled: true
  auth:
    enabled: true
    # name of an existing secret with RedisÂ® credentials (instead of auth.password), must be created ahead of time
    existingSecret: db-creds
    # Password key to be retrieved from existing secret
    existingSecretPasswordKey: redis-password


## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  # Nextcloud Data (/var/www/html)
  enabled: true
  storageClass: data

  existingClaim: nextcloud-data

  accessMode: ReadWriteOnce
  size: 8Gi
